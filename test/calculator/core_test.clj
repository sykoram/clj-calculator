(ns calculator.core-test
  (:require [clojure.test :refer [deftest testing is]]
            [calculator.core :refer [evaluate]]))

(deftest evaluate-test
  (testing "simple"
    (is (= 1 (evaluate "1")))
    (is (= 4.2 (evaluate "1 +3.2")))
    (is (= 80 (evaluate "10 * (2--6)")))
    (is (= 1024 (evaluate "2^-(5-15)")))
    (is (= 1/3 (evaluate "120/360")))
    (is (= 4 (evaluate "sqrt(16)")))
    (is (= -1 (evaluate "sgn(-8)")))
    (is (= 10 (evaluate "log(2, 1024)")))
    (is (< 0.999999 (evaluate "ln(e)") 1.000001))
    (is (= 0 (evaluate "tan(0)")))
    (is (< 0.999999 (evaluate "tan(pi/4)") 1.000001))
    (is (= 6 (evaluate "log2(64)")))
    (is (= 4 (evaluate "cbrt(64)")))
    (is (< 2.718281 (evaluate "e") 2.718282))
    (is (< 3.141592 (evaluate "pi") 3.141593))
    (is (< 1.618033 (evaluate "phi") 1.618034))
    (is (= 5 (evaluate "abs(5)")))
    (is (= 5 (evaluate "abs(-5)")))
    (is (= 1 (evaluate "0!")))
    (is (= 120 (evaluate "5!")))
    (is (= -120 (evaluate "-5!")))
    (is (= 0.25 (evaluate "double(2/8)")))
    )
  (testing "complex"
    (is (= -8 (evaluate "-(-1--2)-(3)--(-4)")))
    (is (= 60 (evaluate "(10-(5+2))*20")))
    (is (= 93 (evaluate "-1+5-(10-3)^-2*7+88+8/7")))
    (is (< 2.999999 (evaluate "0.1*sin(3.14159265) + log(3; sqrt(27*27))") 3.000001))
    (is (< -1.000001 (evaluate "-( sin(5)^2 + cos(5)^2)") -0.999999))
    (is (< -0.000001 (evaluate "cos(2*pi/2) + sin(pi/4)^2*2") 0.000001))
    (is (= 8 (evaluate "floor(1.9) - 4*ceil(-2.6) + round(0.5) + round(1.6)/round(-0.7)")))
    (is (= -3072 (evaluate "-2!*2^3!*4!")))
    (is (= -125/27 (evaluate "(-5/3)^3")))
    (is (= -27/125 (evaluate "(-5/3)^-3")))
    ))